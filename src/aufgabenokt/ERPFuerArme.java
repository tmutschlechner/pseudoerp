/*
Copyright (c) 2020 Tobias Mutschlechner

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
documentation files (the "Software"), to deal in the Software without restriction, including without limitation the
rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit
persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the
Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. 
 */

package aufgabenokt;

import java.awt.Graphics;
import java.awt.Image;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author tmutschlechner
 */
public class ERPFuerArme extends javax.swing.JFrame {

    /**
     * Creates new form ERPFuerArme
     */
    public ERPFuerArme() {
        initComponents();
        auth.setVisible(true);
        searchPanel.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        about = new javax.swing.JFrame();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        auth = new javax.swing.JFrame();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        pwf_pass = new javax.swing.JPasswordField();
        txf_name = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        btn_login = new javax.swing.JButton();
        btn_abrtLogin = new javax.swing.JButton();
        addClient = new javax.swing.JDialog();
        newClientName = new javax.swing.JTextField();
        newClientLocation = new javax.swing.JTextField();
        newClientAddress = new javax.swing.JTextField();
        newClientZIP = new javax.swing.JTextField();
        newClientTel = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        newClientSave = new javax.swing.JButton();
        newClientCancel = new javax.swing.JButton();
        changePrice = new javax.swing.JDialog();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txfPriceChange = new javax.swing.JTextField();
        txfStartingAt = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        showElements = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        btnEnd = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnHome = new javax.swing.JButton();
        btnPrevious = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        panelClients = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableClients = new javax.swing.JTable();
        panelInvoices = new javax.swing.JPanel();
        scpInvoices = new javax.swing.JScrollPane();
        tableInvoices = new javax.swing.JTable();
        statusbar = new javax.swing.JPanel();
        lblStatus = new javax.swing.JLabel();
        searchPanel = new javax.swing.JPanel();
        lblSearch = new javax.swing.JLabel();
        txfSearch = new javax.swing.JTextField();
        menuBar = new javax.swing.JMenuBar();
        toolsMenu = new javax.swing.JMenu();
        newClientMenuItem = new javax.swing.JMenuItem();
        changePriceMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        viewMenu = new javax.swing.JMenu();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem2 = new javax.swing.JCheckBoxMenuItem();
        helpMenu = new javax.swing.JMenu();
        aboutMenuItem = new javax.swing.JMenuItem();

        about.setTitle("Über ERP für Arme");
        about.setMinimumSize(new java.awt.Dimension(520, 310));
        about.setResizable(false);

        jLabel1.setFont(new java.awt.Font("Cantarell", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ERP für Arme");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Version 0.0.1a");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("© 2020 Tobias Mutschlechner");

        jButton1.setText("Schließen");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ");
        jTextArea1.setWrapStyleWord(true);
        jScrollPane2.setViewportView(jTextArea1);

        javax.swing.GroupLayout aboutLayout = new javax.swing.GroupLayout(about.getContentPane());
        about.getContentPane().setLayout(aboutLayout);
        aboutLayout.setHorizontalGroup(
            aboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 524, Short.MAX_VALUE)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(aboutLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(aboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, aboutLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        aboutLayout.setVerticalGroup(
            aboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aboutLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        auth.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        auth.setTitle("Anmeldung erforderlich");
        auth.setAlwaysOnTop(true);
        auth.setMinimumSize(new java.awt.Dimension(400, 250));

        jLabel4.setFont(new java.awt.Font("Cantarell", 1, 20)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Anmeldung erforderlich");

        jLabel5.setText("Benutzername:");

        jLabel6.setText("Passwort:");

        pwf_pass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_loginActionPerformed(evt);
            }
        });

        jCheckBox1.setText("Passwort anzeigen");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        btn_login.setText("Anmelden");
        btn_login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_loginActionPerformed(evt);
            }
        });

        btn_abrtLogin.setText("Abbrechen");
        btn_abrtLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_abrtLoginActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout authLayout = new javax.swing.GroupLayout(auth.getContentPane());
        auth.getContentPane().setLayout(authLayout);
        authLayout.setHorizontalGroup(
            authLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(authLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(authLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addGroup(authLayout.createSequentialGroup()
                        .addGroup(authLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(authLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pwf_pass)
                            .addComponent(txf_name)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, authLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(authLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, authLayout.createSequentialGroup()
                                .addComponent(btn_abrtLogin)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_login)))))
                .addContainerGap())
        );
        authLayout.setVerticalGroup(
            authLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(authLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(authLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(txf_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(authLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(pwf_pass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox1)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(authLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_login)
                    .addComponent(btn_abrtLogin))
                .addContainerGap())
        );

        addClient.setTitle("Neuer Kunde");
        addClient.setAlwaysOnTop(true);
        addClient.setMaximumSize(new java.awt.Dimension(400, 320));
        addClient.setMinimumSize(new java.awt.Dimension(400, 320));
        addClient.setModal(true);
        addClient.setPreferredSize(new java.awt.Dimension(400, 320));
        addClient.setResizable(false);

        newClientTel.setColumns(20);

        jLabel9.setText("Name");

        jLabel10.setText("Ort");

        jLabel11.setText("Adresse");

        jLabel12.setText("PLZ");

        jLabel13.setText("Telefon");

        jLabel14.setFont(new java.awt.Font("Cantarell", 1, 24)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Neuer Kunde");

        newClientSave.setText("Speichern");
        newClientSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newClientSaveActionPerformed(evt);
            }
        });

        newClientCancel.setText("Abbrechen");
        newClientCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newClientCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addClientLayout = new javax.swing.GroupLayout(addClient.getContentPane());
        addClient.getContentPane().setLayout(addClientLayout);
        addClientLayout.setHorizontalGroup(
            addClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addClientLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(addClientLayout.createSequentialGroup()
                        .addGroup(addClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                        .addGroup(addClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(newClientName, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(newClientLocation, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(newClientAddress, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(newClientZIP, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(newClientTel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addClientLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(newClientCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(newClientSave)))
                .addContainerGap())
        );
        addClientLayout.setVerticalGroup(
            addClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addClientLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(addClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(newClientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newClientLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newClientAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newClientZIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newClientTel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newClientSave)
                    .addComponent(newClientCancel))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        changePrice.setTitle("Preisänderung");
        changePrice.setMinimumSize(new java.awt.Dimension(300, 145));
        changePrice.setModal(true);
        changePrice.setPreferredSize(new java.awt.Dimension(300, 145));

        jLabel15.setText("Prozent Preisänderung");

        jLabel16.setText("Ab Verkaufspreis");

        jButton2.setText("Speichern");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Abbrechen");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout changePriceLayout = new javax.swing.GroupLayout(changePrice.getContentPane());
        changePrice.getContentPane().setLayout(changePriceLayout);
        changePriceLayout.setHorizontalGroup(
            changePriceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(changePriceLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(changePriceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(changePriceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(changePriceLayout.createSequentialGroup()
                            .addComponent(jLabel15)
                            .addGap(18, 18, 18)
                            .addComponent(txfPriceChange, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(changePriceLayout.createSequentialGroup()
                            .addComponent(jLabel16)
                            .addGap(54, 54, 54)
                            .addComponent(txfStartingAt)))
                    .addGroup(changePriceLayout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)))
                .addContainerGap())
        );
        changePriceLayout.setVerticalGroup(
            changePriceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(changePriceLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(changePriceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txfPriceChange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(changePriceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(txfStartingAt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(changePriceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("ERP für Arme");
        setMinimumSize(new java.awt.Dimension(486, 368));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exit(evt);
            }
        });

        showElements.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "20", "50", "100", "Alle" }));
        showElements.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showElementsActionPerformed(evt);
            }
        });

        jLabel8.setText("Elemente Anzeigen");

        btnEnd.setText("Ende");
        btnEnd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEndActionPerformed(evt);
            }
        });

        btnNext.setText(">");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnHome.setText("Anfang");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        btnPrevious.setText("<");
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnHome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPrevious)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNext)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEnd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(showElements, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(showElements, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel8)
                .addComponent(btnEnd)
                .addComponent(btnNext)
                .addComponent(btnHome)
                .addComponent(btnPrevious))
        );

        panelClients.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                panelClientsComponentShown(evt);
            }
        });

        tableClients.setModel(new javax.swing.table.DefaultTableModel(
            clientsTableData,
            new String [] {
                "KuNr", "Name", "Ort", "Adresse", "PLZ", "Telefon"
            }
        ) {

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        });
        jScrollPane1.setViewportView(tableClients);

        javax.swing.GroupLayout panelClientsLayout = new javax.swing.GroupLayout(panelClients);
        panelClients.setLayout(panelClientsLayout);
        panelClientsLayout.setHorizontalGroup(
            panelClientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelClientsLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        panelClientsLayout.setVerticalGroup(
            panelClientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Kunden", panelClients);

        panelInvoices.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                panelInvoicesComponentShown(evt);
            }
        });

        tableInvoices.setModel(new javax.swing.table.DefaultTableModel(
            invoicesTableData,
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        scpInvoices.setViewportView(tableInvoices);

        javax.swing.GroupLayout panelInvoicesLayout = new javax.swing.GroupLayout(panelInvoices);
        panelInvoices.setLayout(panelInvoicesLayout);
        panelInvoicesLayout.setHorizontalGroup(
            panelInvoicesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scpInvoices, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE)
        );
        panelInvoicesLayout.setVerticalGroup(
            panelInvoicesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scpInvoices, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Rechnungen", panelInvoices);

        lblStatus.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);

        javax.swing.GroupLayout statusbarLayout = new javax.swing.GroupLayout(statusbar);
        statusbar.setLayout(statusbarLayout);
        statusbarLayout.setHorizontalGroup(
            statusbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusbarLayout.createSequentialGroup()
                .addComponent(lblStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        statusbarLayout.setVerticalGroup(
            statusbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, statusbarLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        lblSearch.setText("Suche:");

        txfSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfSearchActionPerformed(evt);
            }
        });
        txfSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txfSearchKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txfSearchKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(lblSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSearch)))
        );

        toolsMenu.setMnemonic('W');
        toolsMenu.setText("Werkzeuge");

        newClientMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        newClientMenuItem.setMnemonic('n');
        newClientMenuItem.setText("Neuer Kunde");
        newClientMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newClientMenuItemActionPerformed(evt);
            }
        });
        toolsMenu.add(newClientMenuItem);

        changePriceMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        changePriceMenuItem.setMnemonic('p');
        changePriceMenuItem.setText("Preisänderung");
        changePriceMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changePriceMenuItemActionPerformed(evt);
            }
        });
        toolsMenu.add(changePriceMenuItem);

        exitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        exitMenuItem.setMnemonic('b');
        exitMenuItem.setText("Beenden");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        toolsMenu.add(exitMenuItem);

        menuBar.add(toolsMenu);

        viewMenu.setMnemonic('A');
        viewMenu.setText("Ansicht");

        jCheckBoxMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F3, 0));
        jCheckBoxMenuItem1.setMnemonic('S');
        jCheckBoxMenuItem1.setText("Suche anzeigen");
        jCheckBoxMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem1ActionPerformed(evt);
            }
        });
        viewMenu.add(jCheckBoxMenuItem1);

        jCheckBoxMenuItem2.setMnemonic('l');
        jCheckBoxMenuItem2.setSelected(true);
        jCheckBoxMenuItem2.setText("Statusleiste anzeigen");
        jCheckBoxMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem2ActionPerformed(evt);
            }
        });
        viewMenu.add(jCheckBoxMenuItem2);

        menuBar.add(viewMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText("?");

        aboutMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        aboutMenuItem.setMnemonic('\u00fc');
        aboutMenuItem.setText("Über");
        aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(searchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(statusbar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(searchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jTabbedPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(statusbar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuItemActionPerformed
        about.setVisible(true);
    }//GEN-LAST:event_aboutMenuItemActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        about.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        if (jCheckBox1.isSelected())
            pwf_pass.setEchoChar((char) 0);
        else
            pwf_pass.setEchoChar('*');
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void btn_abrtLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_abrtLoginActionPerformed
        System.exit(-1);
    }//GEN-LAST:event_btn_abrtLoginActionPerformed

    private void btn_loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_loginActionPerformed

        //DBManager.getConnection("", "");
        //auth.setVisible(false);

        if (DBManager.getConnection(txf_name.getText(),String.valueOf(pwf_pass.getPassword()) )!=null) {
            auth.setVisible(false);
            this.setVisible(true);
        }
        
        panelClientsComponentShown(null);

    }//GEN-LAST:event_btn_loginActionPerformed

    private void exit(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exit
        int answer = JOptionPane.showConfirmDialog(this, "Möchten Sie das Programm wirklich beenden?",
                "Beenden?", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE
        );

        if (answer == 0) {
            System.exit(0);
        }

    }//GEN-LAST:event_exit

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        exit(null);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void jCheckBoxMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem1ActionPerformed
        searchPanel.setVisible(jCheckBoxMenuItem1.isSelected());
    }//GEN-LAST:event_jCheckBoxMenuItem1ActionPerformed

    private void jCheckBoxMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem2ActionPerformed
        statusbar.setVisible(jCheckBoxMenuItem2.isSelected());
    }//GEN-LAST:event_jCheckBoxMenuItem2ActionPerformed

    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousActionPerformed
        if (panelClients.isVisible()) {
            clientsStart = (clientsStart - count <= 0) ? 0 : clientsStart - count;
            panelClientsComponentShown(null);
        } else if (panelInvoices.isVisible()) {
            invoicesStart = (invoicesStart - count <= 0) ? 0 : invoicesStart - count;
            panelInvoicesComponentShown(null);
        }

    }//GEN-LAST:event_btnPreviousActionPerformed

    private void showElementsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showElementsActionPerformed
        boolean a = showElements.getSelectedItem() != "Alle";

        btnPrevious.setEnabled(a);
        btnNext.setEnabled(a);
        btnEnd.setEnabled(a);
        btnHome.setEnabled(a);

        if (a) {
            count = Integer.parseInt(String.valueOf(showElements.getSelectedItem()));

        } else {
            count = -1;
        }

        if (panelClients.isVisible()) {
            panelClientsComponentShown(null);
        } else if (panelInvoices.isVisible()) {
            panelInvoicesComponentShown(null);
        }

    }//GEN-LAST:event_showElementsActionPerformed

    private void panelClientsComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_panelClientsComponentShown
        lblSearch.setText("Suche Kunde:");
        if (this.isVisible()) {
            datenLesen(clientsStart, count);
            tableClients.setModel(new javax.swing.table.DefaultTableModel(
                    clientsTableData,
                    new String[]{
                        "KuNr", "Name", "Ort", "Adresse", "PLZ", "Telefon"
                    }
            ) {

                @Override
                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return false;
                }
            });
        }
    }//GEN-LAST:event_panelClientsComponentShown

    private void txfSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfSearchActionPerformed

    }//GEN-LAST:event_txfSearchActionPerformed

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed

        if (panelClients.isVisible()) {
            clientsStart = 0;
            panelClientsComponentShown(null);
        } else if (panelInvoices.isVisible()) {
            invoicesStart = 0;
            panelInvoicesComponentShown(null);
        }
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnEndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEndActionPerformed

        if (panelClients.isVisible()) {
            clientsStart = clientsTotal - count;
            panelClientsComponentShown(null);
        } else if (panelInvoices.isVisible()) {
            invoicesStart = invoicesTotal - count;
            panelInvoicesComponentShown(null);
        }
    }//GEN-LAST:event_btnEndActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        if (panelClients.isVisible()) {
            clientsStart = (clientsStart + count >= clientsTotal) ? clientsTotal - count : clientsStart + count;
            panelClientsComponentShown(null);
        } else if (panelInvoices.isVisible()) {
            invoicesStart = (invoicesStart + count >= invoicesTotal) ? invoicesTotal - count : invoicesStart + count;
            panelInvoicesComponentShown(null);
        }
    }//GEN-LAST:event_btnNextActionPerformed

    private void panelInvoicesComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_panelInvoicesComponentShown
        lblSearch.setText("Suche Jahr:");
        if (this.isVisible()) {
            datenLesen(invoicesStart, count);
            tableInvoices.setModel(new javax.swing.table.DefaultTableModel(
                    invoicesTableData,
                    new String[]{
                        "KuNr", "Name", "Rechnungs-Nr.", "Datum", "Betrag"
                    }
            ) {

                @Override
                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return false;
                }
            });
        }
    }//GEN-LAST:event_panelInvoicesComponentShown

    private void newClientMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newClientMenuItemActionPerformed
        addClient.setVisible(true);
    }//GEN-LAST:event_newClientMenuItemActionPerformed

    private void newClientSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newClientSaveActionPerformed
        boolean dataOK = true;

        if (newClientZIP.getText().length() != 5 || newClientAddress.getText().isBlank()
                || newClientLocation.getText().isBlank() || newClientName.getText().isBlank()
                || newClientTel.getText().isBlank()) {
            dataOK = false;
        }

        try {
            Integer.parseInt(newClientZIP.getText());
        } catch (NumberFormatException e) {
            dataOK = false;
        }

        if (dataOK) {
            Connection verbindung = DBManager.getConnection();
            String sql = "INSERT INTO faktura.kunden(KuName,KuOrt,KuStrasse,KuPLZ,KuTelefon) VALUES "
                    + "('" + newClientName.getText() + "','" + newClientLocation.getText() + "','"
                    + newClientAddress.getText() + "','" + newClientZIP.getText() + "','"
                    + newClientTel.getText() + "')";
            Statement anweisung;
            try {
                anweisung = (Statement) verbindung.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,
                                      ResultSet.CONCUR_UPDATABLE);
                int anz = anweisung.executeUpdate(sql);
                if (anz == 0) {
                    throw new SQLException();
                }
            } catch (SQLException ex) {
                Logger.getLogger(ERPFuerArme.class.getName()).log(Level.SEVERE, sql, ex);
                JOptionPane.showMessageDialog(this, "Ein Fehler ist aufgetreten.\nDer Kunde wurde nicht gespeichert.",
                        "Fehler", JOptionPane.ERROR_MESSAGE
                );
            }
        } else {
            JOptionPane.showMessageDialog(this, "Die Eingabe ist ungültig.\nDer Kunde wurde nicht gespeichert.",
                    "Ungültige Eingabe", JOptionPane.ERROR_MESSAGE
            );
        }
        addClient.setVisible(false);
    }//GEN-LAST:event_newClientSaveActionPerformed

    private void newClientCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newClientCancelActionPerformed
        addClient.setVisible(false);
    }//GEN-LAST:event_newClientCancelActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        changePrice.setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        boolean dataOk = true;

        if (txfPriceChange.getText().isBlank() || txfStartingAt.getText().isBlank()) {
            dataOk = false;
        }

        try {
            Integer.parseInt(txfPriceChange.getText());
            Double.parseDouble(txfStartingAt.getText());
        } catch (NumberFormatException ex) {
            dataOk = false;
        }

        if (dataOk) {
            Connection verbindung = DBManager.getConnection();

            double newPerc = 1 + (Integer.parseInt(txfPriceChange.getText()) / 100.0);

            String sql = "UPDATE faktura.artikel SET artikel.ArtVerkaufspreis = artikel.ArtVerkaufspreis * "
                    + newPerc + " WHERE artikel.ArtVerkaufspreis > " + txfStartingAt.getText();
            Statement anweisung;
            try {
                anweisung = (Statement) verbindung.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,
                                      ResultSet.CONCUR_UPDATABLE);
                int anz = anweisung.executeUpdate(sql);
                if (anz == 0) {
                    throw new SQLException();
                }
                changePrice.setVisible(false);
            } catch (SQLException ex) {
                Logger.getLogger(ERPFuerArme.class.getName()).log(Level.SEVERE, sql, ex);
                JOptionPane.showMessageDialog(this, "Ein Fehler ist aufgetreten.\nDie Preisänderung wurde nicht "
                        + "gespeichert.", "Fehler", JOptionPane.ERROR_MESSAGE
                );
            }
        } else {
            JOptionPane.showMessageDialog(this, "Die Eingabe ist ungültig.\nDie Preisänderung wurde nicht gespeichert.",
                    "Ungültige Eingabe", JOptionPane.ERROR_MESSAGE
            );
        }


    }//GEN-LAST:event_jButton2ActionPerformed

    private void changePriceMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changePriceMenuItemActionPerformed
        changePrice.setVisible(true);
    }//GEN-LAST:event_changePriceMenuItemActionPerformed

    private void txfSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfSearchKeyTyped

    }//GEN-LAST:event_txfSearchKeyTyped

    private void txfSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfSearchKeyReleased
        if (panelClients.isVisible()) {
            datenLesen(clientsStart, count);
            panelClientsComponentShown(null);
        } else if (panelInvoices.isVisible()) {
            datenLesen(invoicesStart, count);
            panelInvoicesComponentShown(null);
        }
    }//GEN-LAST:event_txfSearchKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ERPFuerArme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ERPFuerArme().setVisible(false);
        });
    }


    private void datenLesen(int start, int count) {
        String search = txfSearch.getText();
        try {

            Connection verbindung = DBManager.getConnection();
            String ausgabe = "Zeige Elemente ";
            String sql = null;

            if (panelClients.isVisible()) {
                sql = "select * from faktura.kunden ";
                if (!search.isBlank()) {
                    sql += " WHERE faktura.kunden.KuName LIKE '%" + search + "%' ";
                }
            } else if (panelInvoices.isVisible()) {
                sql = "select kunden.KuNr, kunden.KuName, rechnungen.ReNr, rechnungen.ReDatum, rechnungen.ReBetrag"
                        + " from faktura.rechnungen, faktura.kunden where rechnungen.Kunden_KuNr = kunden.KuNr ";
                if (!search.isBlank()) {
                    sql += " AND faktura.rechnungen.ReDatum LIKE '%" + search + "%' ";
                }
            }

            sql += (count < 0) ? "" : "LIMIT " + start + "," + count;
            //System.err.println(sql);

            Statement anweisung = (Statement) verbindung.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,
                                      ResultSet.CONCUR_UPDATABLE);
            ResultSet rs = (ResultSet) anweisung.executeQuery(sql);
            rs.last();
            int num = rs.getRow();
            rs.first();

            if (panelClients.isVisible()) {
                clientsTableData = new String[num][6];
                for (int j = 0; j < num; j++) {
                    clientsTableData[j][0] = rs.getString(1);
                    clientsTableData[j][1] = rs.getString(2);
                    clientsTableData[j][2] = rs.getString(3);
                    clientsTableData[j][3] = rs.getString(4);
                    clientsTableData[j][4] = rs.getString(5);
                    clientsTableData[j][5] = rs.getString(6);
                    rs.next();
                }

                sql = "select count(*) from faktura.kunden";
                if (!search.isBlank()) {
                    sql += " WHERE faktura.kunden.KuName LIKE '%" + search + "%' ";
                }
                rs = (ResultSet) anweisung.executeQuery(sql);
                rs.next();

                clientsTotal = rs.getInt(1);

                ausgabe += (count < 0) ? "0-" : start + "-" + (count + start) + "/";
                ausgabe += clientsTotal + " an.";
            } else if (panelInvoices.isVisible()) {
                invoicesTableData = new String[num][5];
                double sum = 0;
                for (int i = 0; i < num; i++) {
                    invoicesTableData[i][0] = rs.getString(1);
                    invoicesTableData[i][1] = rs.getString(2);
                    invoicesTableData[i][2] = rs.getString(3);
                    invoicesTableData[i][3] = rs.getString(4);
                    invoicesTableData[i][4] = rs.getString(5);
                    sum += Double.parseDouble(rs.getString(5));
                    rs.next();
                }

                sql = "select count(*) from faktura.rechnungen";
                
                if (!search.isBlank()) {
                    sql += " WHERE faktura.rechnungen.ReDatum LIKE '%" + search + "%' ";
                }
                
                rs = (ResultSet) anweisung.executeQuery(sql);
                rs.next();

                invoicesTotal = rs.getInt(1);

                sql = "select sum(faktura.rechnungen.ReBetrag) from faktura.rechnungen ";
                if (!search.isBlank()) {
                    sql += " WHERE faktura.rechnungen.ReDatum LIKE '%" + search + "%' ";
                }

                rs = (ResultSet) anweisung.executeQuery(sql);
                rs.next();

                ausgabe += (count < 0) ? "0-" : start + "-" + (count + start) + "/";
                ausgabe += invoicesTotal + " an. "
                        + "Gesamtumsatz: " + String.format("%1.2f€", sum) + " / "
                        + String.format("%1.2f€", rs.getDouble(1));
            }

            lblStatus.setText(ausgabe);
        } catch (SQLException ex) {
            System.err.println("Fehler beim Lesen von Dateien: datenlesen()");
            //ex.printStackTrace(System.err);
        }
    }

    private String[][] clientsTableData;
    private int clientsStart = 0;
    private int clientsTotal = 0;

    private String[][] invoicesTableData;
    private int invoicesStart = 0;
    private int invoicesTotal = 0;

    private int count = 20;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFrame about;
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JDialog addClient;
    private javax.swing.JFrame auth;
    private javax.swing.JButton btnEnd;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrevious;
    private javax.swing.JButton btn_abrtLogin;
    private javax.swing.JButton btn_login;
    private javax.swing.JDialog changePrice;
    private javax.swing.JMenuItem changePriceMenuItem;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JTextField newClientAddress;
    private javax.swing.JButton newClientCancel;
    private javax.swing.JTextField newClientLocation;
    private javax.swing.JMenuItem newClientMenuItem;
    private javax.swing.JTextField newClientName;
    private javax.swing.JButton newClientSave;
    private javax.swing.JTextField newClientTel;
    private javax.swing.JTextField newClientZIP;
    private javax.swing.JPanel panelClients;
    private javax.swing.JPanel panelInvoices;
    private javax.swing.JPasswordField pwf_pass;
    private javax.swing.JScrollPane scpInvoices;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JComboBox<String> showElements;
    private javax.swing.JPanel statusbar;
    private javax.swing.JTable tableClients;
    private javax.swing.JTable tableInvoices;
    private javax.swing.JMenu toolsMenu;
    private javax.swing.JTextField txfPriceChange;
    private javax.swing.JTextField txfSearch;
    private javax.swing.JTextField txfStartingAt;
    private javax.swing.JTextField txf_name;
    private javax.swing.JMenu viewMenu;
    // End of variables declaration//GEN-END:variables

}